name: Symfony CI

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: app
          POSTGRES_USER: app
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: intl, pdo_pgsql

      - name: Install Dependencies
        run: |
          composer install
      - name: Set env variable
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> "$GITHUB_ENV"

      - name: Create Database
        run: |
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:schema:create --env=test
      - name: Run PHPUnit Tests
        run: |
          php bin/phpunit
      - name: Generate the code coverage report and show the current global coverage
        run: |
          php -d xdebug.enable=1 -d memory_limit=-1 vendor/bin/phpunit --coverage-html=var/coverage
          php bin/coverage-checker.php var/coverage/clover.xml 99
      - name: Stop PostgreSQL Container
        run: docker stop $(docker ps -a -q)

  # run all lint/CS checks (non critical)
  symfony-lint:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: cs2pr
      - uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install PHP dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install PHPUnit dependencies for PHPStan
        run: vendor/bin/phpunit --version

      # native Symfony lints
      - name: Lint the DI container
        run: bin/console lint:container
      - name: Lint Twig templates
        run: bin/console lint:twig
      - name: Lint Yaml files
        run: bin/console lint:yaml config/

      # cs
      - name: php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run --format=checkstyle | cs2pr
      - name: PHPStan
        run: |
          bin/console about --env=dev
          vendor/bin/phpstan analyse -c phpstan.neon --memory-limit 1G -vvv